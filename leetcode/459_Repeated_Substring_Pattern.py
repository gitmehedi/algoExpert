"""
459. Repeated Substring Pattern
Given a string s, check if it can be constructed by taking a substring of it and appending multiple copies of the substring together.



Example 1:

Input: s = "abab"
Output: true
Explanation: It is the substring "ab" twice.
Example 2:

Input: s = "aba"
Output: false
Example 3:

Input: s = "abcabcabcabc"
Output: true
Explanation: It is the substring "abc" four times or the substring "abcabc" twice.


Constraints:

1 <= s.length <= 104
s consists of lowercase English letters.
"""
import resource
import time

time_start = time.perf_counter()


class Solution:
    def repeatedSubstringPattern(self, s: str) -> bool:
        for val in range(1, len(s)):
            new_str = s[:val] * int(len(s) / val)
            if s == new_str:
                return True
        return False


s = "abab"
s = "aba"
s = "abcabcabcabc"
s = "prdttmqtookjbrryiwbouvkhgbrommxyhyscpnphvjllkwawtbwftgzczcrmviwpaacbsfuqpiqiyjwbeesmsbqmorjstvrgvmdizflhkkeumcptccryrkxzzxvygkemhbyfmhpexfoidjqvwfccqitxrppkrxlxrrvkvogcmgzqaivhbbgjtgfgpgspmlhfcgelhovcnamaizcaysvrpsnverowehpiztmedkixsxwzzseaozyzjvpvxetprasbndetckeemhqhfyqcdecgdtraxznlcdlwyxutryycmcxsyyscnutifyjecsudmhbfgpvymiovjwcmgsgzcebovlztfpknmtqlkxychrwxqfaumevtdkgbuqebyrnudvcfjydxqihvauauymxgdfjlemmpozgdzvsatcvemrojmxhvfmfbtdjywwephrzbutnuommunmnhmnqgfxxjwvregecxmqxmrukeynsgfsvkojfchcjuqmyypbndycjknlmxdjafhstcyszbujfxcduojzmynweqshnskjvbcdjhhhwckkrtebyzoqapwbebancwhmqwobvyxcfglwuwvyjfwwumcvovcghypywyiqbwjdgmedyhfppmmyafvwyavtdtuyzbmfxfeljberxdtlpavaxgectauqycnfgkhdcvhteiggngynbnqvpqtoxpktehmddebvbpeigccpnrraomgllylvkalezuprztzdlotldnjtgjywtawkykdjucbfmuwyvrqftrmbyjhfkndsehrlybncisumoczkxaadaleqwvjpqauhqgibmbxcivjdroaghxvwybphqkelwdoidxnygjtguhfqlthemedjmnhoclssfkrkzwalgapnbemkujrshojxqddkbqwfqkismfrxofgqibpqnngroephngywjakiozcceypzzaqcwqogbucjwaybvbmhgljjndcwcrxttkqdfcvacvrnjgwtexmeytarnltfiqqjrtxyfipyrshacohcdkovnktrdhopzdfyripyabgasnzxgpsxcrdhuiwaedcmuoigadrsmeowolpzsvywxihgebyqvuebmxcuoofumbxlntxzlhdexixaafuqrtrwompetjgaqwdlchxsxdtutibhnivvnudtkotiulxngwpgfytzhebjlrroabxcepbqvnnlygsyjhhohttgwvjuthdnrxkxzurxwjpneiglhcneqxgjlckxlmwwutpaionzyhsbmkpitkakbylnhdurxvunqrcwurvgznprfrhwrtpysqfbawwhuqdvjaosgivobaqfzfqfutniwuftxvjjlanuppywvlqnhrtxoezmokdezusxvidvtfkxbwhrkurathgbavskrixzhbjtbitijivamodyzqbnaasoudafojrmqzcmzdgxvhbqcebgdqekwisxpkysblxxgnreabrcowuinszcopghezmuekagcohqcrizdccwaenjfuztrkcxrkcnmxzgrvvjhgsaztaitjxhdaflspbnkhyyqvqwhullodqcbvphffimcsssasvwtqgijbhotypcguoeudqumblxtzxmnggrbhfrsemcatjmwoetgjvydqeykvubvodyexkeqwuvjdpawqvrkcgaqzoykoutlpoiytvseduaxwqhekunupqlvagdfdttbnbjswwbkmrfyceddqngweyfcuzrlgwrbzpypilwsnvkxkcfviybnrfwerbvvqgmqulhukecazlkdewkwtevkjcijbznrejkoilwidafqemxlrhyjmaltrzeojhatrajqbqgycnpudkbvajwwjfwvnhemecppdkeierofqxuisemskpjwihgnqbhrjhfbvatszcudryonznpsuzwsgwpwojhgmtqekelbjecuvachcbnrdzjopyugzyplnvensvobdyqqifyevtwblvwcueiaghnhsaoeqpdovftqhgxgpebzqbhwlcpgunzqeousobxwfzcjnbmrdjuwgfxojacxtczdxzrbnkjmbqbwdufmwqbtmcpvkohwwgozpethrrzzmrucrntxtwhooblrqbwwapsvwogajovblyeaesfrjanjjjhywbmsrnfnhdvqrkfebpwanpmpfzxorvadwaqtsotwtdsuiiizeqmdekntmxupctqzcnvozaitstehyvnakcharcfymsuqzrjmfbksvkezbvvqzdohnfjrbroihypehjiftqmdccprcargjhuoxqjpeckmnqdlaiukzzpdpcvvidkuzeyswefkfzbuyxzdwdstvqwmrnvwmkoyeoozqkpjbaymuwjadzjhhxrsjvxayvjqpynfufltfbgegsqharujbdsyyfqoiigrdomwwcfsqadrlntssbblposlmjbclcbhmeksstorsubikjvvllnhmpvsptzpkioyhrzonxtmfjnkwhshxmdmaigdukdvsqwugsijcwkbbnysiirdpamjxcqxmdecbqjzqygxlmkfuaymisqerabxafdovzbltsgmqybwckcjjzorzztsuvuxpnypwahqnwmbdspacyjtudxrzyiajshcxmozfvgxuopbqbkktskrjszzjylglxtnllwhjxdsavopcnvkkbjihlltkjydfmkhhhcjcvhroqxornqndjlhttvmmrnngubjenxrczwnpzedciiqulctdirosacqspvvbqzlyifoqsnrobbxuxlfreyhtipyqkfxjyfifmgepgxghnqluqgaosyifzabwjeugnxtnbfsmnfelxjdobxenqbmshbyivhitcjuybdzwqhkxyukegquzuenherugnmpbncpsxksffkldueazsiqzodffflmsqcxicwxavoloslttiidhnpnubxwuhbijcumtzfinkdrqursfihdgewyxbrpdpedemsjixjfrwxbpvswudjtecrftgzauljmjtbxsmxyyljjikobccpbzmxmtprxndbwyyhvteorfaemetqaheiffjjmmhmpwswxbzwlilcantsnqzsfxjvxezgoqujcyphlvkasdpjvditefhgllcpebakmfvphhawoxfsjlgympejxvqzvwvgzufujzjqbaytddpwwmrmfnsivjfneimyqcmihdhdeyzzuezcwlgxkvbgrgieticlbbntfbyknvbtuqkseuvmircdoissnbpykkvftovgkjxpjfphcrnaldcdcxcreezxjqnjztdmszjglqwmrllxehsirybojbnmvrrbclildtbxoswuqtqdassfljztyciqdbjipezfqgjzpbfjmyynxcfybmqckyohglxlpgpeibntumploqwpmabdbvddcbxynetamjqxtngdyhqwgzshyhyryhdoggclagdlnvvdidywvuosmajhdvlzkeixvtexskqsmvbnguaisovclsbxavomxatlrfbcnnddjpdvmqzrtleaqejvdfnersivuekyttucwfthashmzjtlmsedpecgxlpyxwnypvmbwfjdbdfbgofzpgljsprebqwloksghfqgdswbfhzxfmkddsdrysuwyoncnrmgybucxishzldhaybrqttrysvhdhouzkiepynplphlybwjpetdwgkgzneodvvtnxcatmkuborfmhsqbafsyikxiygevuuefxgcxygqjuykboanzklvacgjbbtejslubaugkwgmkrohoxaorospwucgprunuawlnruyfkfwnnbjvwdkhbixnwkasdrpintwarnphyyktemsyllyacjqvxskippmnykqutxswrggmtypwmkipkbaxlrdmenhoduaajlusrtumjvtuxrmtoqznzzkvaifmsnfobwdzohmvtaqvjrtirvqnjcslnmgbvjelnbdrptusjwbpwqfhwbhsvewywvcrwsfhcvkrvfpaayogwyxtsglwcyqrbdbpovvjsscouqwltbhxuvpuxemqwrpxgbqwjhxukxdvgcrzbabjvtgpjbdukfxozjzyujfunpdcrvvttvplnbvypweapjgxjqsxkmfggofrxwakgohgiwibeluoccycjcpolxzvedzftrqajrswxhjdqgunmdvcqmsyzinibdvdqsngojsjwnsqwgfxmutamuceczwlxwbvijdjhnmzdjtktzqjdmizirlyvjrapdqbueplmcegacybchhjvurzrrdybgscmlvptriuonzvklzysohkajfyzozryaqftxhldiwwplzuaasbuqmgnysfqdthtfrrkjdidgazpeiozyaduulzmovofzptcvnabaiwemxzmtqtkybldwesksefxqsllbwjnnawmnljxcdqjhamtjdsretstvwympscdqfvzdsneawsbkxufkqvbzonftrjpsefhilnizsjwsovoytsdzktbrbuuqmagjvmuhtloqpszqtjpytlkxkqdcrvhkadtjnzbkniddydbwswtgnaplplnuegmczqjrojttlwtplzmrqqlaotvkgpxujkjlpemflvagkkuyivuugfhvizaitmbhalreplfmvqdprdttmqtookjbrryiwbouvkhgbrommxyhyscpnphvjllkwawtbwftgzczcrmviwpaacbsfuqpiqiyjwbeesmsbqmorjstvrgvmdizflhkkeumcptccryrkxzzxvygkemhbyfmhpexfoidjqvwfccqitxrppkrxlxrrvkvogcmgzqaivhbbgjtgfgpgspmlhfcgelhovcnamaizcaysvrpsnverowehpiztmedkixsxwzzseaozyzjvpvxetprasbndetckeemhqhfyqcdecgdtraxznlcdlwyxutryycmcxsyyscnutifyjecsudmhbfgpvymiovjwcmgsgzcebovlztfpknmtqlkxychrwxqfaumevtdkgbuqebyrnudvcfjydxqihvauauymxgdfjlemmpozgdzvsatcvemrojmxhvfmfbtdjywwephrzbutnuommunmnhmnqgfxxjwvregecxmqxmrukeynsgfsvkojfchcjuqmyypbndycjknlmxdjafhstcyszbujfxcduojzmynweqshnskjvbcdjhhhwckkrtebyzoqapwbebancwhmqwobvyxcfglwuwvyjfwwumcvovcghypywyiqbwjdgmedyhfppmmyafvwyavtdtuyzbmfxfeljberxdtlpavaxgectauqycnfgkhdcvhteiggngynbnqvpqtoxpktehmddebvbpeigccpnrraomgllylvkalezuprztzdlotldnjtgjywtawkykdjucbfmuwyvrqftrmbyjhfkndsehrlybncisumoczkxaadaleqwvjpqauhqgibmbxcivjdroaghxvwybphqkelwdoidxnygjtguhfqlthemedjmnhoclssfkrkzwalgapnbemkujrshojxqddkbqwfqkismfrxofgqibpqnngroephngywjakiozcceypzzaqcwqogbucjwaybvbmhgljjndcwcrxttkqdfcvacvrnjgwtexmeytarnltfiqqjrtxyfipyrshacohcdkovnktrdhopzdfyripyabgasnzxgpsxcrdhuiwaedcmuoigadrsmeowolpzsvywxihgebyqvuebmxcuoofumbxlntxzlhdexixaafuqrtrwompetjgaqwdlchxsxdtutibhnivvnudtkotiulxngwpgfytzhebjlrroabxcepbqvnnlygsyjhhohttgwvjuthdnrxkxzurxwjpneiglhcneqxgjlckxlmwwutpaionzyhsbmkpitkakbylnhdurxvunqrcwurvgznprfrhwrtpysqfbawwhuqdvjaosgivobaqfzfqfutniwuftxvjjlanuppywvlqnhrtxoezmokdezusxvidvtfkxbwhrkurathgbavskrixzhbjtbitijivamodyzqbnaasoudafojrmqzcmzdgxvhbqcebgdqekwisxpkysblxxgnreabrcowuinszcopghezmuekagcohqcrizdccwaenjfuztrkcxrkcnmxzgrvvjhgsaztaitjxhdaflspbnkhyyqvqwhullodqcbvphffimcsssasvwtqgijbhotypcguoeudqumblxtzxmnggrbhfrsemcatjmwoetgjvydqeykvubvodyexkeqwuvjdpawqvrkcgaqzoykoutlpoiytvseduaxwqhekunupqlvagdfdttbnbjswwbkmrfyceddqngweyfcuzrlgwrbzpypilwsnvkxkcfviybnrfwerbvvqgmqulhukecazlkdewkwtevkjcijbznrejkoilwidafqemxlrhyjmaltrzeojhatrajqbqgycnpudkbvajwwjfwvnhemecppdkeierofqxuisemskpjwihgnqbhrjhfbvatszcudryonznpsuzwsgwpwojhgmtqekelbjecuvachcbnrdzjopyugzyplnvensvobdyqqifyevtwblvwcueiaghnhsaoeqpdovftqhgxgpebzqbhwlcpgunzqeousobxwfzcjnbmrdjuwgfxojacxtczdxzrbnkjmbqbwdufmwqbtmcpvkohwwgozpethrrzzmrucrntxtwhooblrqbwwapsvwogajovblyeaesfrjanjjjhywbmsrnfnhdvqrkfebpwanpmpfzxorvadwaqtsotwtdsuiiizeqmdekntmxupctqzcnvozaitstehyvnakcharcfymsuqzrjmfbksvkezbvvqzdohnfjrbroihypehjiftqmdccprcargjhuoxqjpeckmnqdlaiukzzpdpcvvidkuzeyswefkfzbuyxzdwdstvqwmrnvwmkoyeoozqkpjbaymuwjadzjhhxrsjvxayvjqpynfufltfbgegsqharujbdsyyfqoiigrdomwwcfsqadrlntssbblposlmjbclcbhmeksstorsubikjvvllnhmpvsptzpkioyhrzonxtmfjnkwhshxmdmaigdukdvsqwugsijcwkbbnysiirdpamjxcqxmdecbqjzqygxlmkfuaymisqerabxafdovzbltsgmqybwckcjjzorzztsuvuxpnypwahqnwmbdspacyjtudxrzyiajshcxmozfvgxuopbqbkktskrjszzjylglxtnllwhjxdsavopcnvkkbjihlltkjydfmkhhhcjcvhroqxornqndjlhttvmmrnngubjenxrczwnpzedciiqulctdirosacqspvvbqzlyifoqsnrobbxuxlfreyhtipyqkfxjyfifmgepgxghnqluqgaosyifzabwjeugnxtnbfsmnfelxjdobxenqbmshbyivhitcjuybdzwqhkxyukegquzuenherugnmpbncpsxksffkldueazsiqzodffflmsqcxicwxavoloslttiidhnpnubxwuhbijcumtzfinkdrqursfihdgewyxbrpdpedemsjixjfrwxbpvswudjtecrftgzauljmjtbxsmxyyljjikobccpbzmxmtprxndbwyyhvteorfaemetqaheiffjjmmhmpwswxbzwlilcantsnqzsfxjvxezgoqujcyphlvkasdpjvditefhgllcpebakmfvphhawoxfsjlgympejxvqzvwvgzufujzjqbaytddpwwmrmfnsivjfneimyqcmihdhdeyzzuezcwlgxkvbgrgieticlbbntfbyknvbtuqkseuvmircdoissnbpykkvftovgkjxpjfphcrnaldcdcxcreezxjqnjztdmszjglqwmrllxehsirybojbnmvrrbclildtbxoswuqtqdassfljztyciqdbjipezfqgjzpbfjmyynxcfybmqckyohglxlpgpeibntumploqwpmabdbvddcbxynetamjqxtngdyhqwgzshyhyryhdoggclagdlnvvdidywvuosmajhdvlzkeixvtexskqsmvbnguaisovclsbxavomxatlrfbcnnddjpdvmqzrtleaqejvdfnersivuekyttucwfthashmzjtlmsedpecgxlpyxwnypvmbwfjdbdfbgofzpgljsprebqwloksghfqgdswbfhzxfmkddsdrysuwyoncnrmgybucxishzldhaybrqttrysvhdhouzkiepynplphlybwjpetdwgkgzneodvvtnxcatmkuborfmhsqbafsyikxiygevuuefxgcxygqjuykboanzklvacgjbbtejslubaugkwgmkrohoxaorospwucgprunuawlnruyfkfwnnbjvwdkhbixnwkasdrpintwarnphyyktemsyllyacjqvxskippmnykqutxswrggmtypwmkipkbaxlrdmenhoduaajlusrtumjvtuxrmtoqznzzkvaifmsnfobwdzohmvtaqvjrtirvqnjcslnmgbvjelnbdrptusjwbpwqfhwbhsvewywvcrwsfhcvkrvfpaayogwyxtsglwcyqrbdbpovvjsscouqwltbhxuvpuxemqwrpxgbqwjhxukxdvgcrzbabjvtgpjbdukfxozjzyujfunpdcrvvttvplnbvypweapjgxjqsxkmfggofrxwakgohgiwibeluoccycjcpolxzvedzftrqajrswxhjdqgunmdvcqmsyzinibdvdqsngojsjwnsqwgfxmutamuceczwlxwbvijdjhnmzdjtktzqjdmizirlyvjrapdqbueplmcegacybchhjvurzrrdybgscmlvptriuonzvklzysohkajfyzozryaqftxhldiwwplzuaasbuqmgnysfqdthtfrrkjdidgazpeiozyaduulzmovofzptcvnabaiwemxzmtqtkybldwesksefxqsllbwjnnawmnljxcdqjhamtjdsretstvwympscdqfvzdsneawsbkxufkqvbzonftrjpsefhilnizsjwsovoytsdzktbrbuuqmagjvmuhtloqpszqtjpytlkxkqdcrvhkadtjnzbkniddydbwswtgnaplplnuegmczqjrojttlwtplzmrqqlaotvkgpxujkjlpemflvagkkuyivuugfhvizaitmbhalreplfmvqd"
obj = Solution()
result = obj.repeatedSubstringPattern(s)
print(result)

"""
Time and Memory Calculation
"""
time_elapsed = (time.perf_counter() - time_start)
memMb = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss / 1024.0 / 1024
print("Time  : %5.5f secs \nMemory: %5.5f KByte" % (time_elapsed, memMb))
